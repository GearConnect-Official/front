#!/bin/bash

# Script EAS Build pour tester Microsoft Clarity
# Usage: ./build-eas-clarity.sh

echo "üî• === EAS Build GearConnect avec Microsoft Clarity ==="

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    echo "‚ùå Erreur: Ce script doit √™tre ex√©cut√© depuis la racine du projet GearConnect"
    exit 1
fi

# V√©rifier les variables d'environnement
echo "üîç V√©rification des variables d'environnement..."
if [ -f ".env" ]; then
    echo "‚úÖ Fichier .env trouv√©"
    while IFS='=' read -r key value; do
        if [[ $key =~ ^(API_HOST|API_PORT|CLARITY_PROJECT_ID|CLERK_PUBLISHABLE_KEY)$ ]]; then
            if [ "$key" == "CLARITY_PROJECT_ID" ]; then
                echo "   $key = $value ‚úÖ MICROSOFT CLARITY"
            else
                echo "   $key = $value"
            fi
        fi
    done < .env
else
    echo "‚ùå Fichier .env non trouv√©"
    exit 1
fi

# V√©rifier que EAS CLI est install√©
echo "üîç V√©rification d'EAS CLI..."
if command -v eas &> /dev/null; then
    echo "‚úÖ EAS CLI install√©: $(eas --version)"
else
    echo "üì¶ EAS CLI non install√©. Installation..."
    npm install -g @expo/eas-cli
fi

# Se connecter √† EAS si n√©cessaire
echo "üîç V√©rification de la connexion EAS..."
if ! eas whoami &> /dev/null; then
    echo "üîê Connexion √† EAS requise..."
    eas login
fi

echo "üë§ Utilisateur EAS: $(eas whoami)"

# Choix du type de build
echo ""
echo "üì± Choisissez le type de build:"
echo "1. Development build (Android APK) - Recommand√© pour tester Clarity"
echo "2. Preview build (Android APK) - Version proche de la production"
echo "3. Development Simulator (iOS Simulator)"
read -p "Votre choix (1-3): " choice

case $choice in
    1)
        echo "üöÄ Build de d√©veloppement Android en cours..."
        echo "üîç Cette version inclura Microsoft Clarity FONCTIONNEL !"
        eas build --profile development --platform android --local
        ;;
    2)
        echo "üöÄ Build de preview Android en cours..."
        eas build --profile preview --platform android --local
        ;;
    3)
        echo "üöÄ Build de d√©veloppement iOS Simulator en cours..."
        eas build --profile development-simulator --platform ios --local
        ;;
    *)
        echo "‚ö†Ô∏è  Choix invalide. Build de d√©veloppement Android par d√©faut..."
        eas build --profile development --platform android --local
        ;;
esac

if [ $? -eq 0 ]; then
    echo ""
    echo "üéâ BUILD R√âUSSI avec Microsoft Clarity !"
    echo ""
    echo "üì± INSTRUCTIONS D'INSTALLATION:"
    echo "1. Trouvez le fichier .apk g√©n√©r√© dans le dossier actuel"
    echo "2. Transf√©rez-le sur votre appareil Android"
    echo "3. Activez 'Sources inconnues' dans les param√®tres Android"
    echo "4. Installez l'APK"
    echo ""
    echo "üîç TESTING MICROSOFT CLARITY:"
    echo "‚Ä¢ Les analytics sont maintenant ACTIFS"
    echo "‚Ä¢ Utilisez l'app normalement"
    echo "‚Ä¢ V√©rifiez les logs : 'Clarity initialized successfully'"
    echo "‚Ä¢ Dashboard Clarity: https://clarity.microsoft.com"
    echo "‚Ä¢ Projet ID: $(grep CLARITY_PROJECT_ID .env | cut -d'=' -f2)"
    echo ""
    echo "üìä Les donn√©es appara√Ætront dans 2-4 heures sur le dashboard"
else
    echo "‚ùå Erreur lors du build"
    echo "V√©rifiez les logs ci-dessus pour plus de d√©tails"
fi

echo ""
echo "üîß Pour plus d'informations, consultez:"
echo "- Documentation EAS: https://docs.expo.dev/build/introduction/"
echo "- Microsoft Clarity: https://clarity.microsoft.com" 